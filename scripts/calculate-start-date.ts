#!/usr/bin/env tsx

// Ber√§kna r√§tt startdatum f√∂r SSAB schema
function calculateCorrectStartDate() {
  const targetDate = new Date('2025-07-24'); // Idag
  const targetPosition = 5; // Position 5 = sista E i m√∂nstret ['M', 'M', 'M', 'E', 'E', 'E', 'N', 'N', 'N', 'L', 'L', 'L', 'L', 'L']
  const cycleLength = 14;
  
  console.log('üî¢ Ber√§knar korrekt startdatum f√∂r SSAB schema');
  console.log('==============================================');
  console.log(`M√•ldag: ${targetDate.toDateString()}`);
  console.log(`√ñnskad position i cykel: ${targetPosition} (sista E)`);
  console.log(`Cykell√§ngd: ${cycleLength} dagar\n`);
  
  // Ber√§kna hur m√•nga dagar tillbaka vi beh√∂ver g√•
  const daysToSubtract = targetPosition;
  const startDate = new Date(targetDate);
  startDate.setDate(startDate.getDate() - daysToSubtract);
  
  console.log(`Ber√§knat startdatum: ${startDate.toDateString()}`);
  console.log(`ISO format: ${startDate.toISOString().split('T')[0]}`);
  
  // Verifiera genom att r√§kna fram√•t
  console.log('\nüîç Verifiering:');
  const daysDiff = Math.floor((targetDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));
  const position = daysDiff % cycleLength;
  
  console.log(`Dagar fr√•n startdatum till m√•ldag: ${daysDiff}`);
  console.log(`Position i cykel: ${position}`);
  console.log(`F√∂rv√§ntad position: ${targetPosition}`);
  console.log(`Resultat: ${position === targetPosition ? '‚úÖ KORREKT' : '‚ùå FELAKTIGT'}`);
  
  return startDate;
}

const correctStartDate = calculateCorrectStartDate();